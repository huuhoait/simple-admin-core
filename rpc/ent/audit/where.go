// Code generated by ent, DO NOT EDIT.

package audit

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/suyuan32/simple-admin-core/rpc/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.Audit {
	return predicate.Audit(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.Audit {
	return predicate.Audit(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.Audit {
	return predicate.Audit(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.Audit {
	return predicate.Audit(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.Audit {
	return predicate.Audit(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.Audit {
	return predicate.Audit(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.Audit {
	return predicate.Audit(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldUpdatedAt, v))
}

// ObjectName applies equality check predicate on the "object_name" field. It's identical to ObjectNameEQ.
func ObjectName(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldObjectName, v))
}

// ActionName applies equality check predicate on the "action_name" field. It's identical to ActionNameEQ.
func ActionName(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldActionName, v))
}

// ChangedData applies equality check predicate on the "changed_data" field. It's identical to ChangedDataEQ.
func ChangedData(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldChangedData, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Audit {
	return predicate.Audit(sql.FieldLTE(FieldUpdatedAt, v))
}

// ObjectNameEQ applies the EQ predicate on the "object_name" field.
func ObjectNameEQ(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldObjectName, v))
}

// ObjectNameNEQ applies the NEQ predicate on the "object_name" field.
func ObjectNameNEQ(v string) predicate.Audit {
	return predicate.Audit(sql.FieldNEQ(FieldObjectName, v))
}

// ObjectNameIn applies the In predicate on the "object_name" field.
func ObjectNameIn(vs ...string) predicate.Audit {
	return predicate.Audit(sql.FieldIn(FieldObjectName, vs...))
}

// ObjectNameNotIn applies the NotIn predicate on the "object_name" field.
func ObjectNameNotIn(vs ...string) predicate.Audit {
	return predicate.Audit(sql.FieldNotIn(FieldObjectName, vs...))
}

// ObjectNameGT applies the GT predicate on the "object_name" field.
func ObjectNameGT(v string) predicate.Audit {
	return predicate.Audit(sql.FieldGT(FieldObjectName, v))
}

// ObjectNameGTE applies the GTE predicate on the "object_name" field.
func ObjectNameGTE(v string) predicate.Audit {
	return predicate.Audit(sql.FieldGTE(FieldObjectName, v))
}

// ObjectNameLT applies the LT predicate on the "object_name" field.
func ObjectNameLT(v string) predicate.Audit {
	return predicate.Audit(sql.FieldLT(FieldObjectName, v))
}

// ObjectNameLTE applies the LTE predicate on the "object_name" field.
func ObjectNameLTE(v string) predicate.Audit {
	return predicate.Audit(sql.FieldLTE(FieldObjectName, v))
}

// ObjectNameContains applies the Contains predicate on the "object_name" field.
func ObjectNameContains(v string) predicate.Audit {
	return predicate.Audit(sql.FieldContains(FieldObjectName, v))
}

// ObjectNameHasPrefix applies the HasPrefix predicate on the "object_name" field.
func ObjectNameHasPrefix(v string) predicate.Audit {
	return predicate.Audit(sql.FieldHasPrefix(FieldObjectName, v))
}

// ObjectNameHasSuffix applies the HasSuffix predicate on the "object_name" field.
func ObjectNameHasSuffix(v string) predicate.Audit {
	return predicate.Audit(sql.FieldHasSuffix(FieldObjectName, v))
}

// ObjectNameEqualFold applies the EqualFold predicate on the "object_name" field.
func ObjectNameEqualFold(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEqualFold(FieldObjectName, v))
}

// ObjectNameContainsFold applies the ContainsFold predicate on the "object_name" field.
func ObjectNameContainsFold(v string) predicate.Audit {
	return predicate.Audit(sql.FieldContainsFold(FieldObjectName, v))
}

// ActionNameEQ applies the EQ predicate on the "action_name" field.
func ActionNameEQ(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldActionName, v))
}

// ActionNameNEQ applies the NEQ predicate on the "action_name" field.
func ActionNameNEQ(v string) predicate.Audit {
	return predicate.Audit(sql.FieldNEQ(FieldActionName, v))
}

// ActionNameIn applies the In predicate on the "action_name" field.
func ActionNameIn(vs ...string) predicate.Audit {
	return predicate.Audit(sql.FieldIn(FieldActionName, vs...))
}

// ActionNameNotIn applies the NotIn predicate on the "action_name" field.
func ActionNameNotIn(vs ...string) predicate.Audit {
	return predicate.Audit(sql.FieldNotIn(FieldActionName, vs...))
}

// ActionNameGT applies the GT predicate on the "action_name" field.
func ActionNameGT(v string) predicate.Audit {
	return predicate.Audit(sql.FieldGT(FieldActionName, v))
}

// ActionNameGTE applies the GTE predicate on the "action_name" field.
func ActionNameGTE(v string) predicate.Audit {
	return predicate.Audit(sql.FieldGTE(FieldActionName, v))
}

// ActionNameLT applies the LT predicate on the "action_name" field.
func ActionNameLT(v string) predicate.Audit {
	return predicate.Audit(sql.FieldLT(FieldActionName, v))
}

// ActionNameLTE applies the LTE predicate on the "action_name" field.
func ActionNameLTE(v string) predicate.Audit {
	return predicate.Audit(sql.FieldLTE(FieldActionName, v))
}

// ActionNameContains applies the Contains predicate on the "action_name" field.
func ActionNameContains(v string) predicate.Audit {
	return predicate.Audit(sql.FieldContains(FieldActionName, v))
}

// ActionNameHasPrefix applies the HasPrefix predicate on the "action_name" field.
func ActionNameHasPrefix(v string) predicate.Audit {
	return predicate.Audit(sql.FieldHasPrefix(FieldActionName, v))
}

// ActionNameHasSuffix applies the HasSuffix predicate on the "action_name" field.
func ActionNameHasSuffix(v string) predicate.Audit {
	return predicate.Audit(sql.FieldHasSuffix(FieldActionName, v))
}

// ActionNameEqualFold applies the EqualFold predicate on the "action_name" field.
func ActionNameEqualFold(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEqualFold(FieldActionName, v))
}

// ActionNameContainsFold applies the ContainsFold predicate on the "action_name" field.
func ActionNameContainsFold(v string) predicate.Audit {
	return predicate.Audit(sql.FieldContainsFold(FieldActionName, v))
}

// ChangedDataEQ applies the EQ predicate on the "changed_data" field.
func ChangedDataEQ(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldChangedData, v))
}

// ChangedDataNEQ applies the NEQ predicate on the "changed_data" field.
func ChangedDataNEQ(v string) predicate.Audit {
	return predicate.Audit(sql.FieldNEQ(FieldChangedData, v))
}

// ChangedDataIn applies the In predicate on the "changed_data" field.
func ChangedDataIn(vs ...string) predicate.Audit {
	return predicate.Audit(sql.FieldIn(FieldChangedData, vs...))
}

// ChangedDataNotIn applies the NotIn predicate on the "changed_data" field.
func ChangedDataNotIn(vs ...string) predicate.Audit {
	return predicate.Audit(sql.FieldNotIn(FieldChangedData, vs...))
}

// ChangedDataGT applies the GT predicate on the "changed_data" field.
func ChangedDataGT(v string) predicate.Audit {
	return predicate.Audit(sql.FieldGT(FieldChangedData, v))
}

// ChangedDataGTE applies the GTE predicate on the "changed_data" field.
func ChangedDataGTE(v string) predicate.Audit {
	return predicate.Audit(sql.FieldGTE(FieldChangedData, v))
}

// ChangedDataLT applies the LT predicate on the "changed_data" field.
func ChangedDataLT(v string) predicate.Audit {
	return predicate.Audit(sql.FieldLT(FieldChangedData, v))
}

// ChangedDataLTE applies the LTE predicate on the "changed_data" field.
func ChangedDataLTE(v string) predicate.Audit {
	return predicate.Audit(sql.FieldLTE(FieldChangedData, v))
}

// ChangedDataContains applies the Contains predicate on the "changed_data" field.
func ChangedDataContains(v string) predicate.Audit {
	return predicate.Audit(sql.FieldContains(FieldChangedData, v))
}

// ChangedDataHasPrefix applies the HasPrefix predicate on the "changed_data" field.
func ChangedDataHasPrefix(v string) predicate.Audit {
	return predicate.Audit(sql.FieldHasPrefix(FieldChangedData, v))
}

// ChangedDataHasSuffix applies the HasSuffix predicate on the "changed_data" field.
func ChangedDataHasSuffix(v string) predicate.Audit {
	return predicate.Audit(sql.FieldHasSuffix(FieldChangedData, v))
}

// ChangedDataEqualFold applies the EqualFold predicate on the "changed_data" field.
func ChangedDataEqualFold(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEqualFold(FieldChangedData, v))
}

// ChangedDataContainsFold applies the ContainsFold predicate on the "changed_data" field.
func ChangedDataContainsFold(v string) predicate.Audit {
	return predicate.Audit(sql.FieldContainsFold(FieldChangedData, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.Audit {
	return predicate.Audit(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.Audit {
	return predicate.Audit(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.Audit {
	return predicate.Audit(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.Audit {
	return predicate.Audit(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.Audit {
	return predicate.Audit(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.Audit {
	return predicate.Audit(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.Audit {
	return predicate.Audit(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.Audit {
	return predicate.Audit(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.Audit {
	return predicate.Audit(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.Audit {
	return predicate.Audit(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.Audit {
	return predicate.Audit(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.Audit {
	return predicate.Audit(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.Audit {
	return predicate.Audit(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.Audit {
	return predicate.Audit(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.Audit {
	return predicate.Audit(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.Audit {
	return predicate.Audit(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.Audit {
	return predicate.Audit(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.Audit {
	return predicate.Audit(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.Audit {
	return predicate.Audit(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.Audit {
	return predicate.Audit(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.Audit {
	return predicate.Audit(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.Audit {
	return predicate.Audit(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.Audit {
	return predicate.Audit(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.Audit {
	return predicate.Audit(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.Audit {
	return predicate.Audit(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.Audit {
	return predicate.Audit(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.Audit {
	return predicate.Audit(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Audit) predicate.Audit {
	return predicate.Audit(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Audit) predicate.Audit {
	return predicate.Audit(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Audit) predicate.Audit {
	return predicate.Audit(func(s *sql.Selector) {
		p(s.Not())
	})
}
